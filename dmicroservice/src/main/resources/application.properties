server.port=8761

spring.application.name=dmicroservice

# Network hostname of the instance on which eureka runs
# Not needed if you are running on a machine that knows its own hostname (by default, it is looked up by using java.net.InetAddress
# To use IP addresses, use - eureka.instance.preferIpAddress (https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-eureka-server.html#spring-cloud-eureka-server-prefer-ip-address)
eureka.instance.hostname=localhost
# Disables self-registration (true for cluster env)
eureka.client.register-with-eureka=false
# Disables self-usage (true for cluster env)
eureka.client.fetch-registry=false

# Expected percentage of heartbeats to not suspect network issue
# If percentage of recieved heartbeats drop below 0.85 - Eureka will enter "self-preservation" mode and will not remove the instances
eureka.renewalPercentThreshold=0.85

# Expose all management endpoints (for demo purposes, can be exposed in prod but not "to outside" in gateway)
management.endpoints.web.exposure.include=*
