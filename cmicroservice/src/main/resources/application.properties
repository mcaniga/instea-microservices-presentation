server.port=8082

spring.application.name=cmicroservice

# URI of the git repository that the Spring Cloud Config Server will manage and use as a store for configuration files
spring.cloud.config.server.git.uri=https://github.com/mcaniga/instea-microservices-presentation.git
# Specifies from which the search starts (by default from root of repo)
spring.cloud.config.server.git.searchPaths=config
# Decides if repository should be cloned on startup (not on demand)
# Generally leads to slower startup but faster first query
spring.cloud.config.server.git.clone-on-start=true
# Default branch of the repository
spring.cloud.config.server.git.default-label=master

# URL of the eureka server.
# Microservice C will register on the Eureka server and fetch registry of known services.
# zones note - can be set to different URLs in a multi-zone (region) setup, enabling a client to interact with multiple Eureka servers if needed
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
# Specifies that this microservice want to be registered in Eureka server
# NOTE - false is often used if microservice only wants to discover others, but don't want to be discoverable
eureka.client.register-with-eureka=true
# Specifies that this microservice wants to use Eureka server to discover others (fetch registry of services)
eureka.client.fetch-registry=true
# How often client sends heartbeats
eureka.instance.lease-renewal-interval-in-seconds=10

# Expose all management endpoints (for demo purposes, can be exposed in prod but not "to outside" in gateway)
management.endpoints.web.exposure.include=*