# Defines port on which the HTTP interface of the microservice will be exposed
# If running local setup without docker, ensure that server.port is distict across microservices
server.port=8081

# URL of the eureka server.
# Microservice B will register on the Eureka server and fetch registry of known services.
# NOTE: defaultZone - accepts of URLs - you can have multiple Eureka server instances 
# zones note - can be set to different URLs in a multi-zone (region) setup, enabling a client to interact with multiple Eureka servers if needed
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
# Specifies that this microservice want to be registered in Eureka server
# NOTE - false is often used if microservice only wants to discover others, but don't want to be discoverable
eureka.client.register-with-eureka=true
# Specifies that this microservice wants to use Eureka server to discover others (fetch registry of services)
eureka.client.fetch-registry=true
# How often client sends heartbeats
eureka.instance.lease-renewal-interval-in-seconds=10

# Expose all management endpoints (for demo purposes, can be exposed in prod but not "to outside" in gateway)
management.endpoints.web.exposure.include=*
