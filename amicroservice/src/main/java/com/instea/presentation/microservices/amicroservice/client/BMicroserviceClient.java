package com.instea.presentation.microservices.amicroservice.client;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;

/**
 * Feign client for interacting with Service B.
 *
 * This client abstracts the communication to the backend service B,
 * allowing for easy data retrieval through Feign's declarative REST client functionality.
 *
 * Implementation is generated by Feign.
 *
 * NOTE: this client makes use of Eureka Server by not providing URL directly, but instead providing only `spring.application.name` of the service B
 *
 * NOTE2: Feign generates the implementation at runtime - cannot look at source in `target` as with generated clients from openapi
 *
 * Debugging feign clients:
 * - application.properties
 *   - logging.level.feign.client=DEBUG
 *   - feign.client.config.default.loggerLevel=full
 */
@FeignClient(name = "service-b-data")
public interface BMicroserviceClient {

  /**
   * Retrieve processed data from Service B.
   * This method sends a GET request to the /process endpoint of Service B.
   *
   * @return the data as a String that has been processed by Service B.
   */
  @GetMapping("/process")
  String getData();
}
